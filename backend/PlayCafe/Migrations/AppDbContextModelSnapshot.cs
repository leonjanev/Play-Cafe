// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayCafe.Data;

#nullable disable

namespace PlayCafe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PlayCafe.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PlayCafe.ViewModels.Cafe.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All food items including appetizers, desserts, and more",
                            Name = "Food"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All drink items including hot drinks, juices, and more",
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Add-ons and extras for food and beverages",
                            Name = "Extras"
                        });
                });

            modelBuilder.Entity("PlayCafe.ViewModels.Cafe.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8771),
                            Description = "Strong brewed coffee",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599748959.689.png",
                            IsAvailable = true,
                            Name = "Espresso",
                            Price = 100m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8774),
                            Description = "Espresso with flavor (hazelnut, chocolate, caramel, banana, coconut, almond)",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986218.833.png",
                            IsAvailable = true,
                            Name = "Flavored Espresso",
                            Price = 120m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8776),
                            Description = "Chilled espresso",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599982240.442.png",
                            IsAvailable = true,
                            Name = "Espresso Freddo",
                            Price = 140m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8778),
                            Description = "Espresso with Baileys Irish Cream",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986191.41.png",
                            IsAvailable = true,
                            Name = "Baileys Espresso",
                            Price = 130m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8779),
                            Description = "Small espresso with milk foam",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986262.623.png",
                            IsAvailable = true,
                            Name = "Small Macchiato",
                            Price = 120m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8781),
                            Description = "Large espresso with milk foam",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986350.217.png",
                            IsAvailable = true,
                            Name = "Large Macchiato",
                            Price = 140m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8782),
                            Description = "Macchiato with flavor (hazelnut, chocolate, caramel, banana, coconut, almond)",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599981983.377.png",
                            IsAvailable = true,
                            Name = "Flavored Macchiato",
                            Price = 160m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8784),
                            Description = "Espresso with steamed milk foam",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986403.502.png",
                            IsAvailable = true,
                            Name = "Cappuccino",
                            Price = 150m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8786),
                            Description = "Cappuccino with flavor (hazelnut, chocolate, caramel, banana, coconut, almond)",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986419.988.png",
                            IsAvailable = true,
                            Name = "Flavored Cappuccino",
                            Price = 170m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8788),
                            Description = "Chilled cappuccino",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599982253.047.png",
                            IsAvailable = true,
                            Name = "Cappuccino Freddo",
                            Price = 170m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8789),
                            Description = "Cappuccino with Baileys Irish Cream",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986567.476.png",
                            IsAvailable = true,
                            Name = "Baileys Cappuccino",
                            Price = 180m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8791),
                            Description = "Instant coffee",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986622.472.png",
                            IsAvailable = true,
                            Name = "Nescafe",
                            Price = 150m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8793),
                            Description = "Nescafe with ice cream",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986685.036.png",
                            IsAvailable = true,
                            Name = "Ice Coffee",
                            Price = 200m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8795),
                            Description = "Coffee with steamed milk",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986749.039.png",
                            IsAvailable = true,
                            Name = "Latte",
                            Price = 150m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8797),
                            Description = "Latte with syrup (espresso, milk, syrup)",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599982181.792.png",
                            IsAvailable = true,
                            Name = "Flavored Latte",
                            Price = 170m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8798),
                            Description = "Coffee with cream",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599982216.374.png",
                            IsAvailable = true,
                            Name = "Cream Coffee",
                            Price = 160m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8800),
                            Description = "Espresso with gelato and chocolate sauce",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986817.099.png",
                            IsAvailable = true,
                            Name = "Affogato",
                            Price = 190m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8801),
                            Description = "Espresso with Irish whiskey and milk foam",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986909.025.png",
                            IsAvailable = true,
                            Name = "Irish Coffee",
                            Price = 220m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8803),
                            Description = "Baileys, Kahlua, hazelnut syrup, espresso and milk foam",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604074720.172.png",
                            IsAvailable = true,
                            Name = "Aspen Coffee",
                            Price = 220m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8805),
                            Description = "Traditional hot drink",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1603471143.369.png",
                            IsAvailable = true,
                            Name = "Salep",
                            Price = 170m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8806),
                            Description = "Rich hot chocolate drink",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599986998.265.png",
                            IsAvailable = true,
                            Name = "Hot Chocolate",
                            Price = 170m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8808),
                            Description = "Selection of premium teas",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599987035.06.png",
                            IsAvailable = true,
                            Name = "Tea",
                            Price = 140m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8809),
                            Description = "Tea with rum",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599987050.874.png",
                            IsAvailable = true,
                            Name = "Rum Tea",
                            Price = 180m,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8811),
                            Description = "Still water",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599987439.843.png",
                            IsAvailable = true,
                            Name = "Rosa 0.33L",
                            Price = 80m,
                            SubCategoryId = 16
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8813),
                            Description = "Still mineral water",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599987475.69.png",
                            IsAvailable = true,
                            Name = "Gorska Still 0.25L",
                            Price = 80m,
                            SubCategoryId = 16
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8814),
                            Description = "Sparkling mineral water",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599987493.138.png",
                            IsAvailable = true,
                            Name = "Gorska Sparkling 0.25L",
                            Price = 90m,
                            SubCategoryId = 16
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8817),
                            Description = "Soft drink",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075106.138.png",
                            IsAvailable = true,
                            Name = "Sprite",
                            Price = 130m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8819),
                            Description = "Soft drink",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1599987651.879.png",
                            IsAvailable = true,
                            Name = "Coca Cola",
                            Price = 130m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8820),
                            Description = "Soft drink",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075306.334.png",
                            IsAvailable = true,
                            Name = "Fanta",
                            Price = 130m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8822),
                            Description = "Fresh watermelon juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075361.788.png",
                            IsAvailable = true,
                            Name = "Watermelon Juice",
                            Price = 150m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8823),
                            Description = "Freshly squeezed orange juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075410.808.png",
                            IsAvailable = true,
                            Name = "Orange Juice",
                            Price = 160m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8825),
                            Description = "Fresh apple juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075456.084.png",
                            IsAvailable = true,
                            Name = "Apple Juice",
                            Price = 160m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Fresh grape juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075502.059.png",
                            IsAvailable = true,
                            Name = "Grape Juice",
                            Price = 170m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8828),
                            Description = "Fresh carrot juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075545.62.png",
                            IsAvailable = true,
                            Name = "Carrot Juice",
                            Price = 180m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8829),
                            Description = "Fresh pineapple juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075588.962.png",
                            IsAvailable = true,
                            Name = "Pineapple Juice",
                            Price = 190m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8831),
                            Description = "Fresh peach juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075632.62.png",
                            IsAvailable = true,
                            Name = "Peach Juice",
                            Price = 190m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8832),
                            Description = "Fresh mango juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075685.587.png",
                            IsAvailable = true,
                            Name = "Mango Juice",
                            Price = 200m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8834),
                            Description = "Fresh strawberry juice",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075727.692.png",
                            IsAvailable = true,
                            Name = "Strawberry Juice",
                            Price = 210m,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8836),
                            Description = "Fresh banana smoothie",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075771.576.png",
                            IsAvailable = true,
                            Name = "Banana Smoothie",
                            Price = 220m,
                            SubCategoryId = 17
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8838),
                            Description = "Fresh berry smoothie",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075809.324.png",
                            IsAvailable = true,
                            Name = "Berry Smoothie",
                            Price = 220m,
                            SubCategoryId = 17
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8839),
                            Description = "Fresh avocado smoothie",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075852.387.png",
                            IsAvailable = true,
                            Name = "Avocado Smoothie",
                            Price = 230m,
                            SubCategoryId = 17
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8841),
                            Description = "Fresh coconut smoothie",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075903.935.png",
                            IsAvailable = true,
                            Name = "Coconut Smoothie",
                            Price = 230m,
                            SubCategoryId = 17
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8842),
                            Description = "Chocolate milkshake with whipped cream",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075937.373.png",
                            IsAvailable = true,
                            Name = "Chocolate Milkshake",
                            Price = 240m,
                            SubCategoryId = 21
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8845),
                            Description = "Vanilla milkshake with whipped cream",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604075982.251.png",
                            IsAvailable = true,
                            Name = "Vanilla Milkshake",
                            Price = 240m,
                            SubCategoryId = 21
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8846),
                            Description = "Strawberry milkshake with whipped cream",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076018.075.png",
                            IsAvailable = true,
                            Name = "Strawberry Milkshake",
                            Price = 240m,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8848),
                            Description = "Caramel milkshake with whipped cream",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076062.604.png",
                            IsAvailable = true,
                            Name = "Caramel Milkshake",
                            Price = 250m,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8850),
                            Description = "Fresh lemonade",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076102.035.png",
                            IsAvailable = true,
                            Name = "Lemonade",
                            Price = 170m,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8851),
                            Description = "Fresh limeade",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076143.772.png",
                            IsAvailable = true,
                            Name = "Limeade",
                            Price = 170m,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8853),
                            Description = "Fruit punch with mixed juices",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076180.075.png",
                            IsAvailable = true,
                            Name = "Fruit Punch",
                            Price = 180m,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8854),
                            Description = "Fresh iced tea",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076215.472.png",
                            IsAvailable = true,
                            Name = "Iced Tea",
                            Price = 160m,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8855),
                            Description = "Pineapple lemonade",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076253.57.png",
                            IsAvailable = true,
                            Name = "Pineapple Lemonade",
                            Price = 180m,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8857),
                            Description = "Coconut lemonade",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076290.357.png",
                            IsAvailable = true,
                            Name = "Coconut Lemonade",
                            Price = 180m,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2025, 1, 16, 21, 39, 36, 128, DateTimeKind.Utc).AddTicks(8859),
                            Description = "Cucumber lemonade",
                            ImageUrl = "https://menu-images-bucket.s3.eu-central-1.amazonaws.com/test1604076345.347.png",
                            IsAvailable = true,
                            Name = "Cucumber Lemonade",
                            Price = 190m,
                            SubCategoryId = 7
                        });
                });

            modelBuilder.Entity("PlayCafe.ViewModels.Cafe.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Tasty starters to enjoy before your meal",
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "A variety of sweet treats and pastries",
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Freshly baked croissants",
                            Name = "Croissant"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Main dishes including sandwiches, burgers, and more",
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Healthy salads including vegetarian and non-vegetarian options",
                            Name = "Salads"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Side dishes such as fries, rice, or bread",
                            Name = "Sides"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Description = "Vegetarian-friendly food options",
                            Name = "Vegetarian"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Description = "Vegan food options",
                            Name = "Vegan"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Description = "Gluten-free food options",
                            Name = "Gluten-Free"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Description = "Coffee, tea, and other hot beverages",
                            Name = "Hot Drinks"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Description = "Naturally squeezed fresh juices",
                            Name = "Fresh Juices"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "Non-alcoholic beverages",
                            Name = "Soft Drinks"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "Shot drinks and cocktails",
                            Name = "Shots"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Description = "Premium tequila selection",
                            Name = "Tequila"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "Various liqueurs",
                            Name = "Liqueurs"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "Still and sparkling water",
                            Name = "Water"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            Description = "Blended drinks made from fruits and vegetables",
                            Name = "Smoothies"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            Description = "A selection of beers",
                            Name = "Beer"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            Description = "Various types of wines",
                            Name = "Wine"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            Description = "Mixed drinks and unique beverages",
                            Name = "Cocktails"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            Description = "Mixed drinks and unique beverages",
                            Name = "Milkshakes"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 3,
                            Description = "Extras for beverages and food",
                            Name = "Add-ons"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 3,
                            Description = "Sauces, dips, and seasonings",
                            Name = "Condiments"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 3,
                            Description = "Various sweeteners like sugar, honey, stevia",
                            Name = "Sweeteners"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 3,
                            Description = "Toppings for ice cream like sprinkles, syrups, etc.",
                            Name = "Ice Cream Toppings"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PlayCafe.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PlayCafe.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayCafe.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PlayCafe.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlayCafe.ViewModels.Cafe.Product", b =>
                {
                    b.HasOne("PlayCafe.ViewModels.Cafe.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("PlayCafe.ViewModels.Cafe.SubCategory", b =>
                {
                    b.HasOne("PlayCafe.ViewModels.Cafe.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PlayCafe.ViewModels.Cafe.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("PlayCafe.ViewModels.Cafe.SubCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
